.row
  .col-12
    .card.mb-5
      .card-header
        .row
          .col-4.col-lg-5
            =bi_icon('person-circle', 'text-primary')
            %span.m-0!= ticket_author_header(policy(ticket.brand).user_in_brand?, ticket)
            - if ticket.parent_id.nil?
              %span.m-0 via
              %span.badge.rounded-pill.list-group-item-primary.me-1
                = bi_icon(ticket.actual_provider)
                #{ticket.actual_provider}
          .col-2.col-lg-2.d-flex.justify-content-start.justify-content-lg-center
            %span.small.text-muted= ticket.created_at.to_formatted_s(:short)
          .col-4.col-lg-4.d-flex.justify-content-start.justify-content-lg-center
            - ticket.tags.each do |tag|
              %span.badge.rounded-pill.bg-primary.me-1
                = tag.name
                = link_to brand_ticket_tag_path(ticket.brand, ticket, tag), 'data-turbo-method': :delete do
                  = bi_icon('x', 'text-white')
          .col-2.col-lg-1.d-flex.justify-content-start.justify-content-lg-end
            - if ticket.parent_id.nil?
              = link_to brand_ticket_path(ticket.brand, ticket), 'data-turbo-frame' => :_top, title: 'Focus mode' do
                = bi_icon('bullseye')
      .card-body.mx-5
        .card-text
          %p= ticket.content
      - if policy(ticket).internal_note? && ticket.internal_notes.any?
        %ul.list-group.list-group-flush
          - ticket.internal_notes.each do |internal_note|
            %li.list-group-item.list-group-item-primary
              %span.small= bi_icon('sticky')
              %span.small.me-1 #{internal_note.creator.name}:
              %span.small= internal_note.content
      .card-footer
        - if policy(ticket.brand).subscription? || Flipper.enabled?(:disable_subscriptions)
          .row
            - if local_assigns[:action_form]
              - case action_form
              - when 'reply'
                - if policy(ticket).reply?
                  .col-12
                    = form_with url: brand_ticket_replies_path(ticket.brand, ticket),
                      model: ticket.replies.new, method: :post,
                      html: { autocomplete: 'off' } do |reply_form|
                      .input-group.input-group-sm.mb-3
                        = reply_form.text_area :content, required: true,
                          placeholder: 'Reply Text', class: 'form-control'
                        = link_to 'Cancel', brand_ticket_path(ticket.brand, ticket),
                          class: 'btn btn-outline-secondary'
                        = reply_form.submit 'Reply', class: 'btn btn-primary'
              - when 'internal_note'
                - if policy(ticket).internal_note?
                  .col-12
                    = form_with url: brand_ticket_internal_notes_path(ticket.brand, ticket),
                      model: ticket.internal_notes.new, method: :post,
                      html: { autocomplete: 'off' } do |internal_note_form|
                      .input-group.input-group-sm.mb-3
                        = internal_note_form.text_field :content, required: true,
                          placeholder: 'Internal note text..', class: 'form-control'
                        = link_to 'Cancel', brand_ticket_path(ticket.brand, ticket),
                          class: 'btn btn-outline-secondary'
                        = internal_note_form.submit 'Create note', class: 'btn btn-primary'
              - when 'tag'
                = form_with url: brand_ticket_tags_path(ticket.brand, ticket),
                  model: ticket.tags.new, method: :post,
                  html: { autocomplete: 'off' } do |tag_form|
                  .input-group.input-group-sm.mb-3
                    = tag_form.text_field :name, required: true,
                          placeholder: 'Add tags to ticket..', class: 'form-control'
                    = link_to 'Cancel', brand_ticket_path(ticket.brand, ticket),
                        class: 'btn btn-outline-secondary'
                    = tag_form.submit 'Tag ticket', class: 'btn btn-primary'
              - when 'status'
                = form_with url: brand_ticket_path(ticket.brand, ticket),
                  model: ticket, method: :patch do |status_form|
                  .input-group.input-group-sm.mb-3
                    = status_form.select :status,
                      options_for_select(Ticket.statuses.keys, ticket.status),
                      {}, required: true, class: 'custom-select form-control', id: 'ticket-status'
                    = link_to 'Cancel', brand_ticket_path(ticket.brand, ticket),
                        class: 'btn btn-outline-secondary'
                    = status_form.submit 'Update status', class: 'btn btn-primary'
            - else
              .col-12
                .row
                  - if policy(ticket).reply?
                    .col-lg-4.d-flex.justify-content-start
                      = link_to bi_icon('reply-fill', 'text-primary fs-4'),
                        brand_ticket_path(ticket.brand, ticket, action_form: 'reply'),
                        class: 'card-link', id: "toggle-reply-#{ticket.id}", title: 'Reply'
                  .col-lg-4.d-flex.justify-content-center
                    - if ticket.parent_id.nil?
                      %span.small.text-muted Load replies
                  .col-lg-4.d-flex.justify-content-end
                    = link_to bi_icon('bookmark', 'text-primary fs-5'),
                        brand_ticket_path(ticket.brand, ticket, action_form: 'tag'),
                        class: 'card-link', id: "toggle-tag-#{ticket.id}", title: 'Tag Ticket'
                    - if policy(ticket).internal_note?
                      = link_to bi_icon('journal-text', 'text-primary fs-5'),
                        brand_ticket_path(ticket.brand, ticket, action_form: 'internal_note'),
                        class: 'card-link', id: "toggle-internal-note-#{ticket.id}", title: 'Create Internal Note'
                    - if policy(ticket).update?
                      = link_to bi_icon('check-square-fill', 'text-primary fs-5'),
                        brand_ticket_path(ticket.brand, ticket, action_form: 'status'),
                        class: 'card-link', id: "toggle-status-#{ticket.id}", title: 'Resolve Ticket'

